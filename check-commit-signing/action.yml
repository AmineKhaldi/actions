name: "Check unsigned commits"
description: "Checks for unsigned commits being introduced and fails if present"

inputs:
  target:
    description: ""
    required: true
    default: ${{ github.event.pull_request.base.sha }}
  source:
    description: ""
    required: true
    default: ${{ github.event.pull_request.head.sha }}

outputs:
  status:
    description: "Set to either signed or unsigned accordingly."
    value: ${{ steps.check.outputs.status }}

runs:
  using: "composite"
  steps:
    - name: Check for unsigned commits
      id: check
      if: github.event_name == 'pull_request'
      shell: bash
      env:
        unsigned_log: ${RUNNER_TEMP}/unsigned_commits.${{ github.run_id }}
        all_log: ${RUNNER_TEMP}/all_commits.${{ github.run_id }}
        single_log: ${RUNNER_TEMP}/single_commit.${{ github.run_id }}
        verify_output: ${RUNNER_TEMP}/verify_output.${{ github.run_id }}
      run: |
        # TODO: make them more unique
        rm -f "${{ env.unsigned_log }}" "${{ env.all_log }}" "${{ env.single_log }}" "${{ env.verify_output }}"
        echo Target: '${{ inputs.target }}'
        git show --no-patch ${{ inputs.target }}
        echo Source: '${{ inputs.source }}'
        git show --no-patch ${{ inputs.source }}
        touch "${{ env.unsigned_log }}"
        FAIL=nope
        (git log --left-right --oneline --pretty=format:%H ${{ inputs.target }}...${{ inputs.source }}; echo) \
        | while read hash
        do
          (git verify-commit ${hash}; echo) &> "${{ env.verify_output }}" || true
          (git show --no-patch --pretty='format:%H|%aN|%aI|%s' ${hash}; echo) > "${{ env.single_log }}"
          cat "${{ env.single_log }}" >> "${{ env.all_log }}"
          if cat "${{ env.verify_output }}" | grep -E '(Signature made|gpg.ssh.allowedSignersFile needs to be configured)' > /dev/null
          then
            true
          else
            cat "${{ env.single_log }}" >> "${{ env.unsigned_log }}"
            FAIL=yes
          fi
        done

        echo '    ---- All commits in log:'
        cat "${{ env.all_log }}"
        echo '    ----'

        echo '    ---- Unsigned commits in log:'
        cat "${{ env.unsigned_log }}"
        echo '    ----'

        if [ "${FAIL}" == "nope" ]
        then
          echo "status=signed" >> "${GITHUB_OUTPUT}"
        else
          echo "status=unsigned" >> "${GITHUB_OUTPUT}"
          false
        fi
