name: "Check unsigned commits"
description: "Checks for unsigned commits being introduced and fails if present"

inputs:
  target:
    description: ""
    required: true
    default: ${{ github.event.pull_request.base.sha }}
  source:
    description: ""
    required: true
    default: ${{ github.event.pull_request.head.sha }}

outputs:
  status:
    description: "Set to either signed or unsigned accordingly."
    value: ${{ steps.check.outputs.status }}

runs:
  using: "composite"
  steps:
    - name: Check for unsigned commits
      id: check
      if: github.event_name == 'pull_request'
      shell: bash
      env:
        log: ${RUNNER_TEMP}/unsigned_commit_check_log.${{ github.run_id }}
      run: |
        echo Target: '${{ inputs.target }}'
        git show --no-patch ${{ inputs.target }}
        echo Source: '${{ inputs.source }}'
        git show --no-patch ${{ inputs.source }}
        git log --left-right --oneline --pretty='format:%H|%aN|%aI|%s|%G?' ${{ inputs.target }}...${{ inputs.source }} > "${{ env.log }}"
        echo
        echo All commits in log:
        cat "${{ env.log }}"
        # TODO: abominable bash
        set -vx
        (git log --left-right --oneline --pretty=format:%H ${{ inputs.target }}...${{ inputs.source }}; echo) \
        | while read hash; \
        do \
          git verify-commit ${hash} 2>&1 | grep -E '(Signature made|gpg.ssh.allowedSignersFile needs to be configured)' > /dev/null; \
          if [ "$?" == "0" ]; \
          then \
            echo status: commit was signed in some way: ${hash}; \
          else \
            echo status: commit was not signed: ${hash}; \
            exit 1; \
          fi; \
        done
#        echo
#        echo Commits in log considered unsigned:
#        if grep 'N$' "${{ env.log }}"
#        then
#          echo "status=unsigned" >> "${GITHUB_OUTPUT}"
#          false
#        else
#          echo "status=signed" >> "${GITHUB_OUTPUT}"
#          true
#        fi
